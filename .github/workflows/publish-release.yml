name: Publish Release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Release Archive
        run: |
          # Create a zip file with the essential files
          zip -r cyan-actions-${{ github.ref_name }}.zip \
            .github/actions/ \
            .github/workflows/ \
            action.yml \
            package.json \
            README.md \
            LICENSE \
            examples/ \
            docs/ \
            scripts/ \
            -x "*.pyc" "*.pyo" "__pycache__/*" "*.git*" "*.DS_Store"

      - name: Create Package Manifest
        run: |
          cat > package-manifest.json << EOF
          {
            "name": "cyan-actions",
            "version": "${{ github.ref_name }}",
            "description": "Collection of reusable GitHub Actions and Workflows",
            "author": "chaunceyyann",
            "repository": "chaunceyyann/cyan-actions",
            "license": "MIT",
            "actions": [
              "changed-files",
              "account-mapping",
              "check-keywords",
              "check-codepipeline",
              "generate-report",
              "run-codepipeline",
              "test-actions",
              "test-workflows",
              "pr-status-commenter"
            ],
            "workflows": [
              "reusable-python-ci",
              "reusable-pre-commit",
              "reusable-terraform-lint",
              "reusable-pr-status-commenter",
              "reusable-plan-only-pipeline"
            ]
          }
          EOF

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            cyan-actions-${{ github.ref_name }}.zip
            package-manifest.json
          draft: false
          prerelease: false
