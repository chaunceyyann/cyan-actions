name: Integration Test for changed-files Action and python-ci Workflow

on:
  push:
    branches: [master, dev]
    paths:
      - '.github/actions/**'
      - '.github/workflows/**'
  pull_request:
    branches: [master, dev]
    paths:
      - '.github/actions/**'
      - '.github/workflows/**'

jobs:
  find-changes:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.changes.outputs.files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # fetch full history so merge-base can be computed
          fetch-depth: 0

      - name: Fetch PR base branch
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Fetching base branch '${{ github.base_ref }}' for merge-base..."
          git fetch origin ${{ github.base_ref }} --depth=1

      - name: Find changed action and workflow files
        id: changes
        uses: ./.github/actions/changed-files
        with:
          pattern: |
            ^\.github/actions/.*/.*
            ^\.github/workflows/.*\.yml$

      - name: Show changed files
        run: |
          echo "${{ steps.changes.outputs.files }}"

  lint-workflows:
    needs: find-changes
    runs-on: ubuntu-latest
    if: contains(needs.find-changes.outputs.files, '.github/workflows/')
    steps:
      - uses: actions/checkout@v4
      - name: Install actionlint
        run: |
          # install to $HOME/go/bin
          GO111MODULE=on go install github.com/rhysd/actionlint/cmd/actionlint@latest
          # add to PATH for subsequent steps
          echo "$HOME/go/bin" >> $GITHUB_PATH
          # also add to PATH for this step so we can test it now
          export PATH="$HOME/go/bin:$PATH"
          actionlint --version
      - name: Lint changed workflows
        run: |
          echo "üîç Linting changed workflow files..."
          for wf in ${{ needs.find-changes.outputs.files }}; do
            # only lint real workflows, skip this test file
            if [[ $wf =~ ^\.github/workflows/.*\.yml$ ]] && [[ $wf != '.github/workflows/test-custom-actions.yml' ]]; then
              echo "Linting $wf"
              actionlint "$wf"
            fi
          done

  test-changed-files-action:
    needs: find-changes
    runs-on: ubuntu-latest
    if: contains(needs.find-changes.outputs.files, '.github/actions/changed-files/')
    steps:
      - uses: actions/checkout@v4
      - name: Run changed-files action as integration test
        uses: ./.github/actions/changed-files
        with:
          pattern: '^README\.md$'

  test-python-ci-workflow:
    needs: find-changes
    runs-on: ubuntu-latest
    if: contains(needs.find-changes.outputs.files, '.github/workflows/python-ci.yml')
    steps:
      - uses: actions/checkout@v4
      - name: Call python-ci workflow as a test
        uses: ./.github/workflows/python-ci.yml
        with:
          python-version: '3.11'
          run-integration-tests: false 