# Example workflow for using cyan-actions in another repository
# Save this as .github/workflows/ci.yml in your other repo

name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Using the reusable Python CI workflow
  python-tests:
    uses: chaunceyyann/cyan-actions@v1.0.0
    with:
      workflow: reusable-python-ci
      inputs: |
        {
          "python-version": "3.11",
          "run-integration-tests": true,
          "test-directory": "tests",
          "requirements-file": "requirements.txt",
          "python-files-pattern": "**/*.py"
        }

  # Using the reusable pre-commit workflow
  pre-commit:
    uses: chaunceyyann/cyan-actions@v1.0.0
    with:
      workflow: reusable-pre-commit
      inputs: |
        {
          "python-files-pattern": "**/*.py",
          "terraform-files-pattern": "**/*.tf"
        }

  # Using the reusable Terraform lint workflow
  terraform-lint:
    uses: chaunceyyann/cyan-actions@v1.0.0
    with:
      workflow: reusable-terraform-lint
      inputs: |
        {
          "terraform-files-pattern": "**/*.tf"
        }

  # Using individual actions
  changed-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Find changed Python files
        uses: chaunceyyann/cyan-actions@v1.0.0
        with:
          action: changed-files
          inputs: |
            {
              "pattern": "**/*.py"
            }

  # Using the generate-report action
  generate-report:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Generate PDF Report
        uses: chaunceyyann/cyan-actions@v1.0.0
        with:
          action: generate-report
          inputs: |
            {
              "data": "{\"title\": \"Build Report\", \"status\": \"success\", \"timestamp\": \"2024-01-15\"}",
              "data-type": "json",
              "output-filename": "build-report"
            }

  # Using the account-mapping action
  account-mapping:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Map AWS Account
        uses: chaunceyyann/cyan-actions@v1.0.0
        with:
          action: account-mapping
          inputs: |
            {
              "account-id": "123456789012",
              "environment": "production"
            }
